<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[shiren.dev RSS Feed]]></title><description><![CDATA[code for life, life for music]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 28 Aug 2020 01:12:12 GMT</lastBuildDate><item><title><![CDATA[이벤트 핸들러를 대하는 개발자의 자세]]></title><description><![CDATA[이벤트 핸들러는 UI를 개발할 때면 항상 사용된다. 웹뿐만 아니라 네이티브 어플리케이션에서도 약간의 차이가 있을뿐 거의 동일한 추상이 사용된다. 자주 사용되는 만큼 중요하지만 사실 너무 자주 사용되다 보니 가볍게 생각하며 습관적으로 고민 없이 좋지 않은 코드를 만들곤 한다. 자주 사용된다는 건 코드의 양적인 비중도 크다는 것이고 그만큼 조금만 더 신경 쓴다면 큰 효과를 볼 수도 있다. 이런 이벤트 핸들러를 어떻게 다루면 좋은지에 대해 간략하게 정리해봤다. 이벤트 핸들러라고 해서 꼭 DOM 이벤트에만 해당하는 것은 아니며 모듈 간의…]]></description><link>https://blog.shiren.dev/2020-07-27-1/</link><guid isPermaLink="false">https://blog.shiren.dev/2020-07-27-1/</guid><pubDate>Mon, 27 Jul 2020 14:00:00 GMT</pubDate></item><item><title><![CDATA[유용한 테스트 케이스를 위한 개발자의 자세]]></title><description><![CDATA[각종 커뮤니티에 주기적으로 등장하는 "private 메서드를 테스트하려면 어떻게 하나요?" 혹은 "private 메서드를 테스트해야 하나요?" 와 같은 질문을 보면서 언젠가는 관련해서 정리해봐야겠다고 생각했었는데 꽤 시간이 흘러 이 내용으로 글을 써본다. 주제 자체는 간단한 편이지만 사람마다 생각이 다른 것 같다. 특히 해외 개발자들의 의견이 분분한 것 같다. 사실 이 문제는 효과적인 테스트 케이스(이하 TC)란 무엇인가란 질문과 비슷하다. private 메서드는 객체지향적인 관점에서 생각한 것이고 노출된 함수 내부에서 접근하는,…]]></description><link>https://blog.shiren.dev/2020-06-15-%EC%9C%A0%EC%9A%A9%ED%95%9C%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EB%A5%BC%EC%9C%84%ED%95%9C%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98%EC%9E%90%EC%84%B8/</link><guid isPermaLink="false">https://blog.shiren.dev/2020-06-15-%EC%9C%A0%EC%9A%A9%ED%95%9C%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%BC%80%EC%9D%B4%EC%8A%A4%EB%A5%BC%EC%9C%84%ED%95%9C%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%9D%98%EC%9E%90%EC%84%B8/</guid><pubDate>Mon, 15 Jun 2020 14:00:00 GMT</pubDate></item><item><title><![CDATA[개발자와 명상]]></title><description><![CDATA[언젠가부터 여러 가지 걱정들로 머릿속이 복잡해지고 있었다. 이런 상황에서는 운동과 독서가 해결책이 될 수 있는데 운동은 평소 꾸준히 하는 편이었고 독서량을 많이 늘려봤다. 기술 서적이 아닌 내 삶에 필요하다고 생각하는 주제의 책들을 읽었다. 하지만 뭔가 부족했다. “생각을 정리할 시간이 필요하다.”라고 생각했지만, 막상 생각을 정리할 시간을 내기 힘들었다. 지금 생각해보면 그게 힘들었던 건지 생각을 직접적으로 대면하기 두려웠었는지 모르겠다.  몸뚱아리는 현재에 있었지만, 정신과 생각은 미래와 과거를 수없이 오갔다.  마음이 평화롭…]]></description><link>https://blog.shiren.dev/2020-03-24-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%99%80%EB%AA%85%EC%83%81/</link><guid isPermaLink="false">https://blog.shiren.dev/2020-03-24-%EA%B0%9C%EB%B0%9C%EC%9E%90%EC%99%80%EB%AA%85%EC%83%81/</guid><pubDate>Tue, 24 Mar 2020 18:20:00 GMT</pubDate></item><item><title><![CDATA[은닉을 향한 자바스크립트의 여정]]></title><description><![CDATA[ECMAScript 클래스 필드(class field) 명세중에  즉  (이하 Private 속성) 가 있다. 클래스 필드 스펙은 Stage 3(Candidate)까지 올랐으니 아마 곧 Stage 4(Finished)를 거쳐 표준 스펙이 될 것이다. 사실 초기에 명세 문서를 봤을 때는 "드디어 private이 생기는건가?"하는 기대감과 "문법이 좀 별론데"라는 실망감이 있었을 뿐 뭔가 현실감은 없었다. 그렇게 시간이 흘러 기억 속에서 잊힌 채로 지내다가 얼마전에 타입스크립트 3.8에서 정식으로 지원한다는 소식을 들었고 이를 계기로…]]></description><link>https://blog.shiren.dev/2020-03-12-%EC%9D%80%EB%8B%89%EC%9D%84-%ED%96%A5%ED%95%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%97%AC%EC%A0%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2020-03-12-%EC%9D%80%EB%8B%89%EC%9D%84-%ED%96%A5%ED%95%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%98-%EC%97%AC%EC%A0%95/</guid><pubDate>Thu, 12 Mar 2020 11:35:00 GMT</pubDate></item><item><title><![CDATA[코드리뷰로 시작하는 건강한 개발 문화]]></title><description><![CDATA[2019년 11월에 개최한 회사 컨퍼런스 NHN FORWARD에서 프런트엔드에 대한 고민이나 궁금증을 해결할 수 있는 프런트엔드 상담소 를 운영했었다. 다양한 고민이 있었지만, 연차나 직책별로 궁금증과 고민거리들이 비슷하다는 것을 알 수 있었다. 명확하게 묘수를 알려줄 수 있는 트러블 슈팅부터 프런트 엔드 개발자가 가야할 방향까지 다양한 고민이 있었다. 상담소 (상담소 전경… 핸드폰 파는거 아니다) 상담 내용 중에 많은 비중을 차지한 것이 바로 개발 문화에 대한 고민이었다. 현재 꽤 괜찮은 개발 문화를 가진 팀에서 일하고 있다고 …]]></description><link>https://blog.shiren.dev/2020-01-11-%EC%BD%94%EB%93%9C%EB%A6%AC%EB%B7%B0%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EA%B1%B4%EA%B0%95%ED%95%9C-%EA%B0%9C%EB%B0%9C-%EB%AC%B8%ED%99%94/</link><guid isPermaLink="false">https://blog.shiren.dev/2020-01-11-%EC%BD%94%EB%93%9C%EB%A6%AC%EB%B7%B0%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EA%B1%B4%EA%B0%95%ED%95%9C-%EA%B0%9C%EB%B0%9C-%EB%AC%B8%ED%99%94/</guid><pubDate>Sat, 11 Jan 2020 16:00:00 GMT</pubDate></item><item><title><![CDATA[크롬 네이티브 레이지 로딩]]></title><description><![CDATA[레이지 로딩이란? 좋은 기회로 2019년 구글I/O에 참석했다. 웹 기술 세션 중에는 크게 눈에 띄는 세션은 없었지만, 일부 세션에서 소개된 웹과 관련 기술 몇 가지는 흥미로웠다. Native Lazy Loading, Portals, Duplex, Rich Results 정도가 나의 관심을 끌었다. 그중 키노트에서 시작해 몇 개의 세션에서 두루두루 언급한 네이티브 레이지 로딩이 제일 기대됐다. 관련 세션 레이지 로딩, 특히 이미지 레이지 로딩은 새로운 기술은 아니다. 기존 브라우저는 웹페이지를 불러올 때 초기부터 전체 영역에 해당…]]></description><link>https://blog.shiren.dev/2019-05-22-%ED%81%AC%EB%A1%AC-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EB%A0%88%EC%9D%B4%EC%A7%80-%EB%A1%9C%EB%94%A9/</link><guid isPermaLink="false">https://blog.shiren.dev/2019-05-22-%ED%81%AC%EB%A1%AC-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EB%A0%88%EC%9D%B4%EC%A7%80-%EB%A1%9C%EB%94%A9/</guid><pubDate>Wed, 22 May 2019 09:39:00 GMT</pubDate></item><item><title><![CDATA[타입스크립트에서 Vue 컴포넌트를 개발하는 방법]]></title><description><![CDATA[여기까지 오기까지 내가 처음 SPA 프로젝트를 진행했던 때는 2012년이다. 그때 제일 핫했던 백본(Backbone)을 기반으로 구축한 꽤 큰 규모의 프로젝트였다. 그때는 지금처럼 프론트엔드 개발환경이 좋지 않았고 SPA라는 개념 자체가 겨우 슬슬 알려지기 시작한 시기였다. MVC에서 벗어나질 못한 프레임웍들이 주를 이루었던 프론트엔드 진영이었다. 앵귤러JS(AngularJS)가 MVC가 맞느니 아니니 박터지는 가운데 리액트(React)라는 아종이 등장했다. 리액티브와 함수형 패러다임의 영향을 받은 이 프레임웍은 빠르게 성장했다.…]]></description><link>https://blog.shiren.dev/2019-03-28-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2019-03-28-%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C-Vue-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EB%A5%BC-%EA%B0%9C%EB%B0%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><pubDate>Thu, 28 Mar 2019 17:53:00 GMT</pubDate></item><item><title><![CDATA[오픈소스 프로젝트를 운영하며..]]></title><description><![CDATA[오픈소스 프로젝트를 운영하며.. 2018년은 FE개발랩에 좋은 일이 많은 한 해였다. 랩에서 내놓은 오픈소스 프로젝트들이 좋은 반응을 얻었고, 몇 가지 의미있는 성과를 얻었다. 아직 오픈소스 생태계에서 큰 역할을 하지 못하는 대한민국에서 좋은 오픈소스 프로젝트들이 많이 나왔으면 하는 바람으로 몇 년간 우리가 오픈소스를 운영하면서 얻은 나름의 결과를 글로 작성한다. 이 글은 TOAST UI Editor로 작성했으며 차트는 TOAST UI Chart로 만들었고 일부 이미지는 TOAST UI ImageEditor를 사용해 편집했다. 작…]]></description><link>https://blog.shiren.dev/2019-01-11-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%9A%B4%EC%98%81%ED%95%98%EB%A9%B0/</link><guid isPermaLink="false">https://blog.shiren.dev/2019-01-11-%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EB%A5%BC-%EC%9A%B4%EC%98%81%ED%95%98%EB%A9%B0/</guid><pubDate>Fri, 11 Jan 2019 17:07:08 GMT</pubDate></item><item><title><![CDATA[reduce() 를 이용해 순차적으로 프라미스를 해결하는 방법]]></title><description><![CDATA[원글: Why Using reduce() to Sequentially Resolve Promises Works https://css-tricks.com/why-using-reduce-to-sequentially-resolve-promises-works/ reduce() 를 이용해 순차적으로 프라미스를 해결하는 방법  객체를 사용하지 않고 비동기 자바스크립트 코드를 작성하는 것은 눈을 감고 케이크를 굽는 것 만큼 어렵다. 물론 할 수 있지만 복잡해질 것이고 결국 화딱지가 나서 못 해먹을 것이다. 꼭 필요하다고 말할 순 없지만 일단 …]]></description><link>https://blog.shiren.dev/2018-10-24-reduce()%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%88%9C%EC%B0%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2018-10-24-reduce()%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EC%88%9C%EC%B0%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4%EB%A5%BC-%ED%95%B4%EA%B2%B0%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><pubDate>Wed, 24 Oct 2018 17:53:08 GMT</pubDate></item><item><title><![CDATA[Vue.js에서의 다이나믹 컴포넌트 템플릿]]></title><description><![CDATA[원글: https://medium.com/scrumpy/dynamic-component-templates-with-vue-js-d9236ab183bb Vue.js에서의 다이나믹 컴포넌트 템플릿 컴포넌트들이 항상 같은 구조로 되어 있진 않다. 그리고 때론 관리해야할 상태들이 많을때도 있다. 이런 문제는 비동기적인 방법으로 해결할 수도 있다. 유즈 케이스 스크럼피는 알림, 댓글, 첨부 파일 등에서 컴포넌트 템플릿을 사용한다. 우선 댓글 부분을 살펴보면서 정확히 어떤 것을 말하는지 알아보자. 최근의 댓글은 더 이상 단순한 텍스트 필드가…]]></description><link>https://blog.shiren.dev/2018-08-14-Vue.js%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF/</link><guid isPermaLink="false">https://blog.shiren.dev/2018-08-14-Vue.js%EC%97%90%EC%84%9C%EC%9D%98-%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%ED%85%9C%ED%94%8C%EB%A6%BF/</guid><pubDate>Tue, 14 Aug 2018 13:58:08 GMT</pubDate></item><item><title><![CDATA[요즘 잘나가는 프론트엔드 개발환경 만들기(2018): ES6]]></title><description><![CDATA[요즘 잘나가는 프론트엔드 개발환경 만들기(2018): ES6 본 시리즈의  이전 아티클에서는 웹팩4에 대해 다루면서 바로 쓸 수 있는 환경을 만들어봤다. 이번편에는 그 환경 그대로 이용해 ES6 개발 환경을 추가한다. ES6는 이제 충분히 써도 될만한 시기라고 생각한다. "나는 프런트 개발자가 아니기도 하고 브라우저가 모두 지원하지도 않기에 ES6는 아직 못쓴다" 라고 생각하고 있다면 이 글을 통해 생각을 바꿀 수 있길 바란다. 어차피 쓰는 거 ES6뿐 아니라 ES8까지 사용하는 것을 권장한다. IE11 이하 버전들은 ES6나 이…]]></description><link>https://blog.shiren.dev/2018-07-10-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-ES6/</link><guid isPermaLink="false">https://blog.shiren.dev/2018-07-10-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-ES6/</guid><pubDate>Tue, 10 Jul 2018 13:58:08 GMT</pubDate></item><item><title><![CDATA[요즘 잘나가는 프론트엔드 개발 환경 만들기(2018): Webpack 4]]></title><description><![CDATA[요즘 잘나가는 프론트엔드 개발 환경 만들기(2018): Webpack 4 최근에 새로운 프로젝트를 진행하게 되면서 기존에 간만 살짝 보고 있던 뷰(Vue, 이하 뷰)를 본격적으로 도입하게 되었다. 사실 팀에서는 리액트를 선호하고 있었으나 회사 내부에서 뷰의 사용이 빠른 속도로 증가하고 있었고 그에 따라 팀내에서도 뷰에 대한 전문성이 필요하게 되었다. 뷰와 리액트는 서로 영향을 주고받고 발전해나가는 도구들이라 비슷한 부분이 많아 큰 어려움 없이 적응할 수 있었다. 새로운 프로젝트에서는 뷰를 사용하는것 뿐 아니라 다른 개발 환경도 요…]]></description><link>https://blog.shiren.dev/2018-04-16-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-Webpack-4/</link><guid isPermaLink="false">https://blog.shiren.dev/2018-04-16-%EC%9A%94%EC%A6%98-%EC%9E%98%EB%82%98%EA%B0%80%EB%8A%94-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD-%EB%A7%8C%EB%93%A4%EA%B8%B0(2018)-Webpack-4/</guid><pubDate>Mon, 16 Apr 2018 13:58:08 GMT</pubDate></item><item><title><![CDATA[ECMAScript 스펙 톺아보기: Primitive]]></title><description><![CDATA[ECMAScript 스펙 톺아보기: Primitive 프리미티브에 대한 의문 현재 팀 내부에서는 시니어들이 팀 인력 채용 프로세스를 개선하고 있다. 프로세스 중에서도 현재는 필기시험 문제를 재출제하는 중인데 이게 생각보다 쉽지 않아 매일 매일 서로 의견이 분분하다. 그러던 어느 날 프리미티브에 대한 의견을 나누던 중 자바스크립트의 프리미티브를 객체 같이 사용된다고 설명해도 되느냐 안되느냐의 문제를 놓고 토론을 하게 되었는데 내 의견은 표면적으로 객체처럼 사용할 수 있기에 객체 같이 취급된다고 표현해도 된다는 의견이었고 다른 한 멤…]]></description><link>https://blog.shiren.dev/2018-02-23-ECMAScript-%EC%8A%A4%ED%8E%99-%ED%86%BA%EC%95%84%EB%B3%B4%EA%B8%B0:-Primitive/</link><guid isPermaLink="false">https://blog.shiren.dev/2018-02-23-ECMAScript-%EC%8A%A4%ED%8E%99-%ED%86%BA%EC%95%84%EB%B3%B4%EA%B8%B0:-Primitive/</guid><pubDate>Fri, 23 Feb 2018 13:58:08 GMT</pubDate></item><item><title><![CDATA[이맥스와 함께하는 개발환경]]></title><description><![CDATA[금단의 영역에 손을 대다 에디터, IDE뿐 아니라 업무에 관련된 새로운 도구가 나오면 꼭 써봐야 직성이 풀리는 성격이었지만 언젠가부터 그놈이 그놈이고 저놈이 그놈이고 새로운 기능이 있어도 개발을 할 때 사용하는 기능들은 매우 한정적이라는 사실을 깨닫게 되었다. 인텔리제이도 일년 이상은 사용해봤지만 프론트 엔드를 주로 개발하기에 딱히 IDE가 필요하지 않았고 수많은 기능들을 거의 사용하지 않다 보니 필요 이상의 도구를 사용하는 느낌이었다. 그런 느낌이 조금씩 자라나던 중 생뚱맞게도 박웅현 작가의 **여덟 단어** 라는 책을 읽다가 …]]></description><link>https://blog.shiren.dev/2017-11-13-%EC%9D%B4%EB%A7%A5%EC%8A%A4%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</link><guid isPermaLink="false">https://blog.shiren.dev/2017-11-13-%EC%9D%B4%EB%A7%A5%EC%8A%A4%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD/</guid><pubDate>Mon, 13 Nov 2017 13:58:08 GMT</pubDate></item><item><title><![CDATA[웹 기술로 구현하는 Adaptive HTTP Streaming]]></title><description><![CDATA[웹 기술로 구현하는 Adaptive HTTP Streaming 한국은 물론 세계적으로 엄청난 양의 동영상 콘텐츠가 소비되고 있다. 플래시가 대세였던 웹 동영상 기술이 점차 표준 기술인 HTML5 비디오로 전환되었고 요즘은 대부분의 동영상 서비스는 HTML5를 기반으로 서비스되고 있다. 동영상 기술은 점차 고도화되어 네트워크 환경에 따른 최적의 동영상 품질을 스트리밍해 버퍼링없는 서비스를 제공하기 위해 여러 방법들이 모색되었고 그중 하나가 새로 프로토콜을 만드는 대신 기존의 HTTP를 이용해 구현하는 Adaptive HTTP Str…]]></description><link>https://blog.shiren.dev/2017-09-18-%EC%9B%B9-%EA%B8%B0%EC%88%A0%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-Adaptive-HTTP-Streaming/</link><guid isPermaLink="false">https://blog.shiren.dev/2017-09-18-%EC%9B%B9-%EA%B8%B0%EC%88%A0%EB%A1%9C-%EA%B5%AC%ED%98%84%ED%95%98%EB%8A%94-Adaptive-HTTP-Streaming/</guid><pubDate>Mon, 18 Sep 2017 13:58:08 GMT</pubDate></item><item><title><![CDATA[웹어셈블리 바로 사용 해보기]]></title><description><![CDATA[원글: https://tutorials.technology/tutorials/11-webassembly-initial-steps-tutorial.html 소개 웹어셈블리는 미래에 매우 유용하게 사용될 새롭고도 새로운 표준이다. 이 기술은 W3C 커뮤니티 그룹에서 애플, 구글 , 마이크로소프트 그리고 모질라와 함께 개발되고 있다. 이 프로젝트의 초기 시점인 지금은 고 수준의 언어가 아닌 C/C++로 초점이 맞춰져 있고 웹어셈블리의 약어는 wasm 이며 자바스크립트와 브라우저의 개선 사항 중 하나이다. 웹어셈블리는 자바스크립트를 대체…]]></description><link>https://blog.shiren.dev/2017-04-10-%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EB%B0%94%EB%A1%9C-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0/</link><guid isPermaLink="false">https://blog.shiren.dev/2017-04-10-%EC%9B%B9%EC%96%B4%EC%85%88%EB%B8%94%EB%A6%AC-%EB%B0%94%EB%A1%9C-%EC%82%AC%EC%9A%A9-%ED%95%B4%EB%B3%B4%EA%B8%B0/</guid><pubDate>Mon, 10 Apr 2017 13:58:08 GMT</pubDate></item><item><title><![CDATA[쉽게 이해하는 자바스크립트 프로토타입 체인]]></title><description><![CDATA[l 자바스크립트는 객체 지향 언어이자 함수를 1급 객체로 취급하기 때문에 함수형 프로그래밍도 가능한 멀티 패러다임 언어이다. 자바스크립트를 조금이라도 다뤄봤던 사람이라면 익히 알고 있겠지만 자바스크립트에는 클래스란 개념이 없어 객체 생성이나 상속이 다른 언어와 다르고 특히 OOP는 주로 프로토타입이란 메커니즘을 통해 이루어진다. 검색을 조금만 해보면 프로토타입을 다룬 아티클들은 많이 찾아볼 수 있다. 하지만 여기서는 프로토타입에서도 상속을 구현하는 핵심 메커니즘인 포로토타입 체인에 대해 집중적으로 다룬다. 객체 자바스크립트에서 객…]]></description><link>https://blog.shiren.dev/2017-02-21-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8/</link><guid isPermaLink="false">https://blog.shiren.dev/2017-02-21-%EC%89%BD%EA%B2%8C-%EC%9D%B4%ED%95%B4%ED%95%98%EB%8A%94-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85-%EC%B2%B4%EC%9D%B8/</guid><pubDate>Tue, 21 Feb 2017 13:58:08 GMT</pubDate></item><item><title><![CDATA[RxJS와 함께하는 함수형 리액티브 프로그래밍]]></title><description><![CDATA[원글: https://www.sitepoint.com/functional-reactive-programming-rxjs/ RxJS와 함께하는 함수형 반응형 프로그래밍 이 글은 Moritz Kröger, Bruno Mota와 Vildan Softic의 검수를 받았다. SitePoint의 컨텐트들이 최고가 될 수 있게 도와주는 SitePont의 모든 동료 리뷰어들에게 감사를 표한다. 본론으로 들어가기 전에 한가지 중요한 질문을 던져 본다. "반응형 프로그래밍이란 무엇인가?" 지금 시점에서 가장 일반적인 답변은 "반응형 프로그래밍은 동…]]></description><link>https://blog.shiren.dev/2017-01-03-RxJS%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link><guid isPermaLink="false">https://blog.shiren.dev/2017-01-03-RxJS%EC%99%80-%ED%95%A8%EA%BB%98%ED%95%98%EB%8A%94-%ED%95%A8%EC%88%98%ED%98%95-%EB%A6%AC%EC%95%A1%ED%8B%B0%EB%B8%8C-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</guid><pubDate>Tue, 03 Jan 2017 10:07:08 GMT</pubDate></item><item><title><![CDATA[크롬 개발자 도구를 이용한 프론트엔드 성능 측정]]></title><description><![CDATA[크롬 개발자 도구를 이용한 프론트엔드 성능 측정 타임라인 타임라인은 웹페이지를 로드할때나 혹은 유저 인터렉션 등으로 인해 브라우저에서 발생하는 동작들을 레코딩하고 타임라인 형태로 시각화해주는 도구다. 시간의 흐름에 따라 브라우저의 이벤트(여기서의 이벤트는 DOM상의 이벤트가 아닌 브라우저 내부의 동작, 물론 DOM이벤트를 발생시키는 이벤트도 있다)뿐 아니라 CPU, 메모리, 네트워크 사용량과 FPS까지 확인 가능하다. 이벤트에 스택 트레이스 형태로 자바스크립트의 함수 콜 스택도 확인이 가능해 어떤 자바스크립트 코드가 성능에 영향을…]]></description><link>https://blog.shiren.dev/2016-11-15-%ED%81%AC%EB%A1%AC%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8F%84%EA%B5%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EC%84%B1%EB%8A%A5%EC%B8%A1%EC%A0%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-11-15-%ED%81%AC%EB%A1%AC%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%8F%84%EA%B5%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%94%84%EB%A1%A0%ED%8A%B8%EC%97%94%EB%93%9C-%EC%84%B1%EB%8A%A5%EC%B8%A1%EC%A0%95/</guid><pubDate>Tue, 15 Nov 2016 13:44:08 GMT</pubDate></item><item><title><![CDATA[도커로 노드앱을 구축하며 배운것들]]></title><description><![CDATA[도커로 노드 앱을 구축하며 배운것들 원문
http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
by John Lees-Miller 도커를 이용해 노드제이에스 어플리케이션을 개발 하고 배포 하면서 어렵게 배운 팁과 트릭을 공유하고자 한다. 이 튜토리얼 아티클에서는 socket.io chat example을 이용해 기초부터 프로덕션에 응용 가능한 상태까지 될 수 있으면 쉽게 이해할 수 있도록 설명하려 한다. 아래와 같은 내용을 다룬다. 도커를 이용해 노드…]]></description><link>https://blog.shiren.dev/2016-08-23-%EB%8F%84%EC%BB%A4%EB%A1%9C-%EB%85%B8%EB%93%9C%EC%95%B1%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B4%EA%B2%83%EB%93%A4/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-08-23-%EB%8F%84%EC%BB%A4%EB%A1%9C-%EB%85%B8%EB%93%9C%EC%95%B1%EC%9D%84-%EA%B5%AC%EC%B6%95%ED%95%98%EB%A9%B0-%EB%B0%B0%EC%9A%B4%EA%B2%83%EB%93%A4/</guid><pubDate>Tue, 23 Aug 2016 16:07:08 GMT</pubDate></item><item><title><![CDATA[클로저, 그리고 캡슐화와 은닉화]]></title><description><![CDATA[tit 클로저와 객체 클로저를 처음 접했을때 전혀 이해가 되지 않았던 기억이 난다. 클로저를 제대로 이해하려면 자바스크립트 코어에대한 지식이 적지 않게 필요하기 때문이다. 개인적으로는 자신이 사라지기전까지 스코프의 종결을 미루기에, 바꿔 말하면 자신의 사라지면 자신의 스코프도 종결해 버리기에 Closure(종결) 라고 한때 간단하게 정리 했었다.(뭐 틀린말은 아니다) 클로저에 관한 설명은 여기 링크에서 자세하게 알아 볼 수 있다. 참으로 훌륭한 글이다. 간단하고 빠르게 이해를 하기에는 MDN의 클로저 파트 상단에 적혀 있는 내용이…]]></description><link>https://blog.shiren.dev/2016-06-27-%ED%81%B4%EB%A1%9C%EC%A0%80,-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94%EC%99%80-%EC%9D%80%EB%8B%89%ED%99%94/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-06-27-%ED%81%B4%EB%A1%9C%EC%A0%80,-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94%EC%99%80-%EC%9D%80%EB%8B%89%ED%99%94/</guid><pubDate>Mon, 27 Jun 2016 10:07:08 GMT</pubDate></item><item><title><![CDATA[웹개발자를 위한 크롬 개발자 도구]]></title><description><![CDATA[웹 개발자를 위한 크롬 개발자 도구 시작하면서 꼭 프론트엔드 개발자가 아니더라도 웹 개발을 하다 보면 한 번쯤은 크롬 개발자 도구를 사용해 봤을 거라 생각한다.
크롬이 버전업할수록 크롬 개발자 도구 역시 나날이 발전해 왔고 현존하는 도구 중에는 최고의 웹 개발자 도구라고 말할 수 있다.
예전 IE6에서 alert과 status로 디버깅을 했던 시절을 생각하면 정말 좋은 세상에 살고 있다는 생각이 든다. 크롬 개발자 도구에는 정말 많은 기능들이 추가되었고 별도의 도구로 사용했던 기능들도 내부에 편입되어 더욱 유용해졌다. 심지어 로컬…]]></description><link>https://blog.shiren.dev/2016-03-23-%EC%9B%B9%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%AC%EB%A1%AC-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-03-23-%EC%9B%B9%EA%B0%9C%EB%B0%9C%EC%9E%90%EB%A5%BC-%EC%9C%84%ED%95%9C-%ED%81%AC%EB%A1%AC-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EB%8F%84%EA%B5%AC/</guid><pubDate>Wed, 23 Mar 2016 10:07:08 GMT</pubDate></item><item><title><![CDATA[네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법]]></title><description><![CDATA[네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법 원문
https://medium.com/developers-writing/how-to-get-a-performance-boost-using-node-js-native-addons-fd3a24719c85#.buw8o2rrn 이상한그림 아마도 천 번 정도는 들어봤을 법한 Node.js(이하 노드)의 네이티브 모듈에 대해 그것이 무엇이고 왜 고려되어야 할지 다뤄본다. 노드 애드온은 C나 C++로 작성된 동적 링크 공유 객체로 노드의  함수에 의해 로드 되어 일반적인 노드 모듈…]]></description><link>https://blog.shiren.dev/2016-02-18-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EC%95%A0%EB%93%9C%EC%98%A8%EC%9C%BC%EB%A1%9C-Node.js%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%84-%ED%96%A5%EC%83%81-%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-02-18-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EC%95%A0%EB%93%9C%EC%98%A8%EC%9C%BC%EB%A1%9C-Node.js%EC%9D%98-%EC%84%B1%EB%8A%A5%EC%9D%84-%ED%96%A5%EC%83%81-%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><pubDate>Thu, 18 Feb 2016 10:07:08 GMT</pubDate></item><item><title><![CDATA[Webpack으로 자바스크립트 모듈관리 하기]]></title><description><![CDATA[디펜던시 모듈 관리 기존의 프론트엔드 자바스크립트는 특별히 모듈화나 디펜던시관리에 대한 방법이 없어 필요한 자바스크립트 파일을 정해진 순서에 맞게 직접 스크립트 태그로 로드하고 각각 약속된 네임스페이스에 담아 공유했었다. 이런 방식은 프로젝트가 커질수록 그리고 참여 개발자가 많을수록 문제를 일으켰다. 이후 개발자들에 의해 AMD와 CommonJS 두가지 방법으로 모듈 관리 환경이 발전하게 되었는데,
AMD 방식은 RequireJS가 많이 사용되고 있고 CommonJS는 Browserify가 인기가 많았다. 그리고 CommonJS는…]]></description><link>https://blog.shiren.dev/2016-02-15-Webpack%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AA%A8%EB%93%88%EA%B4%80%EB%A6%AC-%ED%95%98%EA%B8%B0/</link><guid isPermaLink="false">https://blog.shiren.dev/2016-02-15-Webpack%EC%9C%BC%EB%A1%9C-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AA%A8%EB%93%88%EA%B4%80%EB%A6%AC-%ED%95%98%EA%B8%B0/</guid><pubDate>Mon, 15 Feb 2016 10:07:08 GMT</pubDate></item><item><title><![CDATA[Flux 카툰 가이드]]></title><description><![CDATA[Flux 카툰가이드 원문
https://code-cartoons.com/a-cartoon-guide-to-flux-6157355ab207#.9nbhrj3of Flux 카툰가이드 플럭스는 현재 웹개발에 대한 토픽들중에 가장 유명하지만 이것을 이해하고 있는 사람은 매우 적다.
본 가이드는 모두가 이해할 수 있도록 도움을 주려 작성되었다. 문제 첫번째로 플럭스가 해결하는 기초적인 문제부터 설명하려고 한다. 플럭스는 어플리케이션에서 데이터를 다루는 패턴으로 리액트와 함께 페이스북에서 성장해왔다. 각각 독립적으로 사용이 가능하지만 많은 사…]]></description><link>https://blog.shiren.dev/2015-10-19-Flux-%EC%B9%B4%ED%88%B0-%EA%B0%80%EC%9D%B4%EB%93%9C/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-10-19-Flux-%EC%B9%B4%ED%88%B0-%EA%B0%80%EC%9D%B4%EB%93%9C/</guid><pubDate>Mon, 19 Oct 2015 10:07:08 GMT</pubDate></item><item><title><![CDATA[유닛테스트가 해야할 5가지 답변 - 테스트를 잘 작성하는 방법]]></title><description><![CDATA[유닛테스트가 해야할 5가지 답변 - 테스트를 잘 작성하는 방법 원문
https://medium.com/javascript-scene/what-every-unit-test-needs-f6cd34d9836d 대부분의 개발자들은 어떻게 테스트 해야하는지 모른다. 모든 개발자들을 프로덕션으로 디플로이할 때 발생할 수 있는 결함을 방지하기 위해 유닛 테스트를 해야 한다고 알고 있지만,
대부분의 개발자들은 유닛 테스트의 필수적인 요소를 모른다. 내가 보아온 유닛 테스트의 실패 사례는 셀 수가 없다.
무엇이 잘못되는 건지 혹은 왜 이게 무슨 …]]></description><link>https://blog.shiren.dev/2015-09-24-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%ED%95%B4%EC%95%BC%ED%95%A0-5%EA%B0%80%EC%A7%80-%EB%8B%B5%EB%B3%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-09-24-%EC%9C%A0%EB%8B%9B%ED%85%8C%EC%8A%A4%ED%8A%B8%EA%B0%80-%ED%95%B4%EC%95%BC%ED%95%A0-5%EA%B0%80%EC%A7%80-%EB%8B%B5%EB%B3%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9E%98-%EC%9E%91%EC%84%B1%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95/</guid><pubDate>Thu, 24 Sep 2015 10:07:08 GMT</pubDate></item><item><title><![CDATA[자바스크립트에서의 커링]]></title><description><![CDATA[자바스크립트의 커링 Currying in Javascript 원문
https://medium.com/@kevincennis/currying-in-javascript-c66080543528 자바스크립트에서의 커링 최근 나는 함수형 프로그래밍에 대해 많은 생각을 해왔다. 함수형 프로그래밍은 일종의 커링함수 만들어가는 과정과 같이 재미있는 것이라 생각했다.
커링을 모르는 사람을 위해 설명을 하자면
커링은 n개의 인자를 가진 함수를 변형하여 하나의 인자를 받는 n개의 함수로 만드는 것이다.
각 부분이 적용된 함수들은 체인을 만들게 되고 …]]></description><link>https://blog.shiren.dev/2015-08-03-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EC%BB%A4%EB%A7%81/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-08-03-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%97%90%EC%84%9C%EC%9D%98-%EC%BB%A4%EB%A7%81/</guid><pubDate>Mon, 03 Aug 2015 13:31:08 GMT</pubDate></item><item><title><![CDATA[동적인 자바스크립트 앱을 위한 ES6 사용법]]></title><description><![CDATA[동적인 자바스크립트 앱을 위한 ES6 사용법 How to Use ES6 for Isomorphic JavaScript Apps 원문
http://medium.com/javascript-scene/how-to-use-es6-for-isomorphic-javascript-apps-2a9c3abe5ea2  이제 먼지는 좀 가라앉았고, 나는 결국 프로덕션 앱에 ES6를 사용하기 시작했다.
그리고 isomorphic Javascript를 작업하기 때문에 Node.js와 Browser 둘 다 작동 해야한다. 이글은 ES6의 기능이나 동적인 …]]></description><link>https://blog.shiren.dev/2015-06-23-%EB%8F%99%EC%A0%81%EC%9D%B8-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%95%B1%EC%9D%84-%EC%9C%84%ED%95%9C-ES6-%EC%82%AC%EC%9A%A9%EB%B2%95/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-06-23-%EB%8F%99%EC%A0%81%EC%9D%B8-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%95%B1%EC%9D%84-%EC%9C%84%ED%95%9C-ES6-%EC%82%AC%EC%9A%A9%EB%B2%95/</guid><pubDate>Tue, 23 Jun 2015 14:50:00 GMT</pubDate></item><item><title><![CDATA[Reactive MVC 그리고 Virtual DOM]]></title><description><![CDATA["Reactive MVC 그리고 Virtual DOM" http://futurice.com/blog/reactive-mvc-and-the-virtual-dom  웹 프론트 엔드 씬에는 수많은 새로운 프레임웍과 작업 방식들이 나타났었다.
어느 때보다 빠르게 소프트웨어는 레거시화 되었고, 이게 사실 좀 짜증 난다.
그러나 사실 이것은 좋은 혁신이다 왜냐하면 개선의 기회가 거기에 있기 때문이다.
프레임웍은 나타났다 사라지지만 그것들이 세상에 가져온 좋은 아이디어들은 남아있다.
우리는 여기서 그 좋은 아이디어와 그리고 그리 좋지 않았던 …]]></description><link>https://blog.shiren.dev/2015-06-01-Reactive-MVC-%EA%B7%B8%EB%A6%AC%EA%B3%A0-Virtual-DOM/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-06-01-Reactive-MVC-%EA%B7%B8%EB%A6%AC%EA%B3%A0-Virtual-DOM/</guid><pubDate>Mon, 01 Jun 2015 11:50:00 GMT</pubDate></item><item><title><![CDATA[자바스크립트 상속에 관한 일반적인 오해들]]></title><description><![CDATA[의역과 오역이 난무합니다.!!^^
내용상 중요하지 않은 부분은 생략했습니다.
오역에 대한 제보 언제든지 환영합니다. 원문
https://medium.com/javascript-scene/common-misconceptions-about-inheritance-in-javascript-d5d9bab29b0a "프로토타입을 이해하지 못했다면 당신은 자바스크립트를 이해하지 못하는것이다." Q. 클래스 방식의 상속과 프로토타입의 상속은 사실상 같은 것이고, 단지 스타일적인 취향이다? "아니다" 클래스와 프로토타입의 상속방식은 근본적으로 그…]]></description><link>https://blog.shiren.dev/2015-05-06-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%83%81%EC%86%8D%EC%97%90-%EA%B4%80%ED%95%9C-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%98%A4%ED%95%B4%EB%93%A4/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-05-06-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%83%81%EC%86%8D%EC%97%90-%EA%B4%80%ED%95%9C-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%98%A4%ED%95%B4%EB%93%A4/</guid><pubDate>Wed, 06 May 2015 12:31:08 GMT</pubDate></item><item><title><![CDATA[지킬 테스트할겸 첫 포스트!]]></title><description><![CDATA[Updated: 현재 블로그는 지킬을 버리고 gatsby 를 이용해서 직접 개발한 블로그로 2020년 8월부터 배포했습니다.  Github덕에 정말 간편하고 아무걱정없이 블로그를 만들수가 있구나.. Node.js를 애정하는 관계로 Hexo와 고민하다가 결국 Jekyll로 결정. 첫포슽!]]></description><link>https://blog.shiren.dev/2015-02-22-%EC%B2%AB%ED%8F%AC%EC%8A%A4%ED%8A%B8/</link><guid isPermaLink="false">https://blog.shiren.dev/2015-02-22-%EC%B2%AB%ED%8F%AC%EC%8A%A4%ED%8A%B8/</guid><pubDate>Sun, 22 Feb 2015 15:07:08 GMT</pubDate></item></channel></rss>