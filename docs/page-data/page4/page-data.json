{"componentChunkName":"component---src-templates-post-list-page-tsx","path":"/page4","result":{"data":{"allMarkdownRemark":{"totalCount":31,"edges":[{"node":{"id":"8add095d-f6aa-5b56-8dca-f5cd59ba1efc","frontmatter":{"title":"크롬 개발자 도구를 이용한 프론트엔드 성능 측정","date":"15 November, 2016","categories":"frontend, tool"},"fields":{"slug":"/2016-11-15-크롬개발자도구를 이용한 프론트엔드 성능측정/"},"excerpt":"크롬 개발자 도구를 이용한 프론트엔드 성능 측정 타임라인 타임라인은 웹페이지를 로드할때나 혹은 유저 인터렉션 등으로 인해 브라우저에서 발생하는 동작들을 레코딩하고 타임라인 형태로 시각화해주는 도구다. 시간의 흐름에 따라 브라우저의 이벤트(여기서의 이벤트는 DOM상의 이벤트가 아닌 브라우저 내부의 동작, 물론 DOM이벤트를 발생시키는 이벤트도 있다)뿐 아니…"}},{"node":{"id":"c6f41e94-cad0-5992-a437-5cb59d064c2b","frontmatter":{"title":"도커로 노드앱을 구축하며 배운것들","date":"23 August, 2016","categories":"nodejs, tool, translation"},"fields":{"slug":"/2016-08-23-도커로 노드앱을 구축하며 배운것들/"},"excerpt":"도커로 노드 앱을 구축하며 배운것들 원문\nhttp://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html\nby John Lees-Miller 도커를 이용해 노드제이에스 어플리케이션을 개발 하고 배포 하면서 어렵게 배운 팁과 트릭을 공유하고자 한다. 이 튜토리얼 아티클에서는 socket.…"}},{"node":{"id":"d253b364-46ae-5d2c-8d73-07ef1e4f1ea6","frontmatter":{"title":"클로저, 그리고 캡슐화와 은닉화","date":"27 June, 2016","categories":"javascript"},"fields":{"slug":"/2016-06-27-클로저, 그리고 캡슐화와 은닉화/"},"excerpt":"tit 클로저와 객체 클로저를 처음 접했을때 전혀 이해가 되지 않았던 기억이 난다. 클로저를 제대로 이해하려면 자바스크립트 코어에대한 지식이 적지 않게 필요하기 때문이다. 개인적으로는 자신이 사라지기전까지 스코프의 종결을 미루기에, 바꿔 말하면 자신의 사라지면 자신의 스코프도 종결해 버리기에 Closure(종결) 라고 한때 간단하게 정리 했었다.(뭐 틀린…"}},{"node":{"id":"42302a1b-51cd-5508-9c44-9e5e5e4ed90f","frontmatter":{"title":"웹개발자를 위한 크롬 개발자 도구","date":"23 March, 2016","categories":"frontend, tool"},"fields":{"slug":"/2016-03-23-웹개발자를 위한 크롬 개발자 도구/"},"excerpt":"웹 개발자를 위한 크롬 개발자 도구 시작하면서 꼭 프론트엔드 개발자가 아니더라도 웹 개발을 하다 보면 한 번쯤은 크롬 개발자 도구를 사용해 봤을 거라 생각한다.\n크롬이 버전업할수록 크롬 개발자 도구 역시 나날이 발전해 왔고 현존하는 도구 중에는 최고의 웹 개발자 도구라고 말할 수 있다.\n예전 IE6에서 alert과 status로 디버깅을 했던 시절을 생각…"}},{"node":{"id":"241e8e33-38a0-5bff-941c-a54614feb567","frontmatter":{"title":"네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법","date":"18 February, 2016","categories":"nodejs, javascript, translation"},"fields":{"slug":"/2016-02-18-네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법/"},"excerpt":"네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법 원문\nhttps://medium.com/developers-writing/how-to-get-a-performance-boost-using-node-js-native-addons-fd3a24719c85#.buw8o2rrn 이상한그림 아마도 천 번 정도는 들어봤을 법한 Node.js(이하 노드)의…"}},{"node":{"id":"edd35d61-9a04-56a4-8659-89eea7fda97b","frontmatter":{"title":"Webpack으로 자바스크립트 모듈관리 하기","date":"15 February, 2016","categories":"frontend, javascript, webpack"},"fields":{"slug":"/2016-02-15-Webpack으로 자바스크립트 모듈관리 하기/"},"excerpt":"디펜던시 모듈 관리 기존의 프론트엔드 자바스크립트는 특별히 모듈화나 디펜던시관리에 대한 방법이 없어 필요한 자바스크립트 파일을 정해진 순서에 맞게 직접 스크립트 태그로 로드하고 각각 약속된 네임스페이스에 담아 공유했었다. 이런 방식은 프로젝트가 커질수록 그리고 참여 개발자가 많을수록 문제를 일으켰다. 이후 개발자들에 의해 AMD와 CommonJS 두가지 …"}}]}},"pageContext":{"limit":6,"skip":18,"numPages":6,"currentPage":4}},"staticQueryHashes":["1529427419","2738229898","3604981619","993531770"]}