{"componentChunkName":"component---src-templates-post-list-page-by-tag-tsx","path":"/javascript/2","result":{"data":{"allMarkdownRemark":{"totalCount":15,"edges":[{"node":{"id":"87880717-9d39-51e2-83c2-0b3e30960f2b","frontmatter":{"title":"웹 기술로 구현하는 Adaptive HTTP Streaming","date":"18 September, 2017","categories":"frontend, javascript"},"fields":{"slug":"/2017-09-18-웹 기술로 구현하는 Adaptive HTTP Streaming/"},"excerpt":"웹 기술로 구현하는 Adaptive HTTP Streaming 한국은 물론 세계적으로 엄청난 양의 동영상 콘텐츠가 소비되고 있다. 플래시가 대세였던 웹 동영상 기술이 점차 표준 기술인 HTML5 비디오로 전환되었고 요즘은 대부분의 동영상 서비스는 HTML5를 기반으로 서비스되고 있다. 동영상 기술은 점차 고도화되어 네트워크 환경에 따른 최적의 동영상 품질…"}},{"node":{"id":"2072c302-7f49-5092-a094-be4031a3dae9","frontmatter":{"title":"쉽게 이해하는 자바스크립트 프로토타입 체인","date":"21 February, 2017","categories":"javascript"},"fields":{"slug":"/2017-02-21-쉽게 이해하는 자바스크립트 프로토타입 체인/"},"excerpt":"l 자바스크립트는 객체 지향 언어이자 함수를 1급 객체로 취급하기 때문에 함수형 프로그래밍도 가능한 멀티 패러다임 언어이다. 자바스크립트를 조금이라도 다뤄봤던 사람이라면 익히 알고 있겠지만 자바스크립트에는 클래스란 개념이 없어 객체 생성이나 상속이 다른 언어와 다르고 특히 OOP는 주로 프로토타입이란 메커니즘을 통해 이루어진다. 검색을 조금만 해보면 프로…"}},{"node":{"id":"5a1bca48-29d2-5126-af13-8b8c3321ff92","frontmatter":{"title":"RxJS와 함께하는 함수형 리액티브 프로그래밍","date":"03 January, 2017","categories":"designpattern, javascript, translation"},"fields":{"slug":"/2017-01-03-RxJS와 함께하는 함수형 리액티브 프로그래밍/"},"excerpt":"원글: https://www.sitepoint.com/functional-reactive-programming-rxjs/ RxJS와 함께하는 함수형 반응형 프로그래밍 이 글은 Moritz Kröger, Bruno Mota와 Vildan Softic의 검수를 받았다. SitePoint의 컨텐트들이 최고가 될 수 있게 도와주는 SitePont의 모든 동료 리…"}},{"node":{"id":"d253b364-46ae-5d2c-8d73-07ef1e4f1ea6","frontmatter":{"title":"클로저, 그리고 캡슐화와 은닉화","date":"27 June, 2016","categories":"javascript"},"fields":{"slug":"/2016-06-27-클로저, 그리고 캡슐화와 은닉화/"},"excerpt":"tit 클로저와 객체 클로저를 처음 접했을때 전혀 이해가 되지 않았던 기억이 난다. 클로저를 제대로 이해하려면 자바스크립트 코어에대한 지식이 적지 않게 필요하기 때문이다. 개인적으로는 자신이 사라지기전까지 스코프의 종결을 미루기에, 바꿔 말하면 자신의 사라지면 자신의 스코프도 종결해 버리기에 Closure(종결) 라고 한때 간단하게 정리 했었다.(뭐 틀린…"}},{"node":{"id":"241e8e33-38a0-5bff-941c-a54614feb567","frontmatter":{"title":"네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법","date":"18 February, 2016","categories":"nodejs, javascript, translation"},"fields":{"slug":"/2016-02-18-네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법/"},"excerpt":"네이티브 애드온으로 Node.js의 성능을 향상 시키는 방법 원문\nhttps://medium.com/developers-writing/how-to-get-a-performance-boost-using-node-js-native-addons-fd3a24719c85#.buw8o2rrn 이상한그림 아마도 천 번 정도는 들어봤을 법한 Node.js(이하 노드)의…"}},{"node":{"id":"edd35d61-9a04-56a4-8659-89eea7fda97b","frontmatter":{"title":"Webpack으로 자바스크립트 모듈관리 하기","date":"15 February, 2016","categories":"frontend, javascript, webpack"},"fields":{"slug":"/2016-02-15-Webpack으로 자바스크립트 모듈관리 하기/"},"excerpt":"디펜던시 모듈 관리 기존의 프론트엔드 자바스크립트는 특별히 모듈화나 디펜던시관리에 대한 방법이 없어 필요한 자바스크립트 파일을 정해진 순서에 맞게 직접 스크립트 태그로 로드하고 각각 약속된 네임스페이스에 담아 공유했었다. 이런 방식은 프로젝트가 커질수록 그리고 참여 개발자가 많을수록 문제를 일으켰다. 이후 개발자들에 의해 AMD와 CommonJS 두가지 …"}}]}},"pageContext":{"category":"javascript","categoryRegex":"/javascript/","limit":6,"skip":6,"numPages":3,"currentPage":2}},"staticQueryHashes":["1529427419","2738229898","3604981619","993531770"]}