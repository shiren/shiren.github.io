{"version":3,"sources":["webpack:///./src/components/listHeader.tsx","webpack:///./node_modules/@styled-icons/fa-solid/GlobeAsia/GlobeAsia.esm.js","webpack:///./src/components/postList.tsx","webpack:///./src/components/pagination.tsx","webpack:///./src/templates/postListPage.tsx"],"names":["styled","children","site","useStaticQuery","siteMetadata","title","GlobeAsia","props","ref","Object","assign","iconAttrs","iconVerticalAlign","iconViewBox","fill","d","displayName","ListItem","Link","PostHeader","h3","PostDate","p","PostEntry","ReadMore","span","Icon","PostList","posts","map","node","to","fields","slug","replace","key","id","frontmatter","categories","includes","date","excerpt","Wrapper","div","PaginationLink","align","Pagination","total","current","hasNext","hasPrev","postListQuery","PostListPage","data","path","allMarkdownRemark","totalCount","edges","currentPage","parseInt","article"],"mappings":"yNA0BeA,qBApBc,SAAC,GAAe,EAAdC,SAAc,IACpCC,EAAQC,YAAe,cAAvBD,KAYP,OACE,gCACE,4BAAKA,EAAKE,aAAaC,WAK7B,6DAAeL,CAAf,gC,YCxBWM,EAAyB,cAAiB,SAAUC,EAAOC,GAKpE,OAAoB,gBAAoB,iBAAgBC,OAAOC,OAAO,CACpEC,UALU,CACV,KAAQ,eACR,MAAS,8BAITC,kBAAmB,SACnBC,YAAa,eACZN,EAAO,CACRC,IAAKA,IACU,gBAAoB,OAAQ,CAC3CM,KAAM,eACNC,EAAG,0vCAGPT,EAAUU,YAAc,YACjB,ICuBDC,EAAWjB,kBAAOkB,KAAV,yEAAGlB,CAAH,iGAWRmB,EAAanB,UAAOoB,GAAV,2EAAGpB,CAAH,+BAKVqB,EAAWrB,UAAOsB,EAAV,yEAAGtB,CAAH,uEAORuB,EAAYvB,UAAOsB,EAAV,0EAAGtB,CAAH,0EAITwB,EAAWxB,UAAOyB,KAAV,yEAAGzB,CAAH,sBAIR0B,EAAO1B,UAAOyB,KAAV,qEAAGzB,CAAH,0HAaK2B,EApEmB,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACnC,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,kBAACb,EAAD,CAAUc,GAAID,EAAKE,OAAOC,KAAKC,QAAQ,MAAO,KAAMC,IAAKL,EAAKM,IAC5D,kBAACjB,EAAD,KACGW,EAAKO,YAAYC,WAAWC,SAAS,eACpC,kBAACb,EAAD,KACE,kBAACpB,EAAD,MADF,MAIE,KACHwB,EAAKO,YAAYhC,OAEpB,kBAACgB,EAAD,kBAAqBS,EAAKO,YAAYG,MACtC,kBAACjB,EAAD,KACGO,EAAKW,QADR,IACiB,kBAACjB,EAAD,2BCArBkB,EAAU1C,UAAO2C,IAAV,yEAAG3C,CAAH,mDAQP4C,EAAiB5C,kBAAOkB,KAAV,gFAAGlB,CAAH,uRACT,qBAAG6C,SAiBCC,EAjDqB,SAAC,GAAuB,IAArBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAItCC,EAAUD,EAAUD,EANL,EAOfG,EAAUF,EAAU,EAE1B,OACE,kBAACN,EAAD,KACGQ,GACC,kBAACN,EAAD,CAAgBC,MAAM,OAAOd,GATG,IAAZiB,EAAA,aAA8BA,EAAU,IAS5D,iBAIDC,GACC,kBAACL,EAAD,CAAgBC,MAAM,QAAQd,GAbjB,SAA0B,IAAZiB,EAAgB,EAAIA,EAAU,IAazD,mBCwBKG,GAFEC,UApBuB,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAAW,EAGpDD,EADFE,kBAAqBC,EAFiC,EAEjCA,WAAmB5B,EAFc,EAErB6B,MAG7BC,EAAcC,SAASL,EAAKpB,QAAQ,QAAS,IAAK,KAAO,EAE/D,OACE,oCACE,kBAAC,IAAD,CAAK0B,SAAS,IACd,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUhC,MAAOA,IACjB,kBAAC,EAAD,CAAYmB,MAAOS,EAAYR,QAASU,OAQnB","file":"component---src-templates-post-list-page-tsx-83a0c8d6eac0afa9e47a.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {Helmet} from 'react-helmet';\n\nimport {useStaticQuery, graphql} from 'gatsby';\n\nconst ListHeader: React.FC = ({children}) => {\n  const {site} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <header>\n      <h1>{site.siteMetadata.title}</h1>\n    </header>\n  );\n};\n\nexport default styled(ListHeader)`\n  margin: 0 auto;\n  width: 750px;\n`;\n","import * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var GlobeAsia = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, Object.assign({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 496 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M248 8C111.03 8 0 119.03 0 256s111.03 248 248 248 248-111.03 248-248S384.97 8 248 8zm-11.34 240.23c-2.89 4.82-8.1 7.77-13.72 7.77h-.31c-4.24 0-8.31 1.69-11.31 4.69l-5.66 5.66c-3.12 3.12-3.12 8.19 0 11.31l5.66 5.66c3 3 4.69 7.07 4.69 11.31V304c0 8.84-7.16 16-16 16h-6.11c-6.06 0-11.6-3.42-14.31-8.85l-22.62-45.23c-2.44-4.88-8.95-5.94-12.81-2.08l-19.47 19.46c-3 3-7.07 4.69-11.31 4.69H50.81C49.12 277.55 48 266.92 48 256c0-110.28 89.72-200 200-200 21.51 0 42.2 3.51 61.63 9.82l-50.16 38.53c-5.11 3.41-4.63 11.06.86 13.81l10.83 5.41c5.42 2.71 8.84 8.25 8.84 14.31V216c0 4.42-3.58 8-8 8h-3.06c-3.03 0-5.8-1.71-7.15-4.42-1.56-3.12-5.96-3.29-7.76-.3l-17.37 28.95zM408 358.43c0 4.24-1.69 8.31-4.69 11.31l-9.57 9.57c-3 3-7.07 4.69-11.31 4.69h-15.16c-4.24 0-8.31-1.69-11.31-4.69l-13.01-13.01a26.767 26.767 0 00-25.42-7.04l-21.27 5.32c-1.27.32-2.57.48-3.88.48h-10.34c-4.24 0-8.31-1.69-11.31-4.69l-11.91-11.91a8.008 8.008 0 01-2.34-5.66v-10.2c0-3.27 1.99-6.21 5.03-7.43l39.34-15.74c1.98-.79 3.86-1.82 5.59-3.05l23.71-16.89a7.978 7.978 0 014.64-1.48h12.09c3.23 0 6.15 1.94 7.39 4.93l5.35 12.85a4 4 0 003.69 2.46h3.8c1.78 0 3.35-1.18 3.84-2.88l4.2-14.47c.5-1.71 2.06-2.88 3.84-2.88h6.06c2.21 0 4 1.79 4 4v12.93c0 2.12.84 4.16 2.34 5.66l11.91 11.91c3 3 4.69 7.07 4.69 11.31v24.6z\"\n  }));\n});\nGlobeAsia.displayName = 'GlobeAsia';\nexport var GlobeAsiaDimensions = {\n  height: 512,\n  width: 496\n};","import React from 'react';\nimport { Link } from 'gatsby';\nimport { GlobeAsia } from '@styled-icons/fa-solid';\nimport styled from 'styled-components';\n\ntype Props = {\n  posts: Array<{\n    node: {\n      id: string;\n      frontmatter: { title: string; date: string; categories: string[] };\n      fields: {\n        slug: string;\n      };\n      excerpt: string;\n    };\n  }>;\n};\n\nconst PostList: React.FC<Props> = ({ posts }) => {\n  return (\n    <div>\n      {posts.map(({ node }) => (\n        <ListItem to={node.fields.slug.replace(/\\s/g, '-')} key={node.id}>\n          <PostHeader>\n            {node.frontmatter.categories.includes('translation') ? (\n              <Icon>\n                <GlobeAsia />\n                번역\n              </Icon>\n            ) : null}\n            {node.frontmatter.title}\n          </PostHeader>\n          <PostDate>Posted on {node.frontmatter.date}</PostDate>\n          <PostEntry>\n            {node.excerpt} <ReadMore>[Read More]</ReadMore>\n          </PostEntry>\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nconst ListItem = styled(Link)`\n  display: block;\n  margin: 35px 0;\n  text-decoration: none;\n  color: #404040;\n\n  &:hover > h3 {\n    color: #0085a1;\n  }\n`;\n\nconst PostHeader = styled.h3`\n  padding: 0;\n  font-size: 36px;\n`;\n\nconst PostDate = styled.p`\n  margin: 0 0 10px 0;\n  color: #808080;\n  font-size: 18px;\n  font-style: italic;\n`;\n\nconst PostEntry = styled.p`\n  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n`;\n\nconst ReadMore = styled.span`\n  font-weight: 800;\n`;\n\nconst Icon = styled.span`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  padding: 3px;\n  vertical-align: top;\n  font-size: 10px;\n\n  & svg {\n    vertical-align: top;\n  }\n`;\n\nexport default PostList;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\ntype Props = {\n  total: number;\n  current: number;\n};\n\nconst COUNT_PER_PAGE = 6;\n\nconst Pagination: React.FC<Props> = ({ total, current }) => {\n  const getPrevUrl = () => (current === 2 ? `/` : `/page${current - 1}`);\n  const getNextUrl = () => `/page${current === 0 ? 2 : current + 1}`;\n\n  const hasNext = current < total / COUNT_PER_PAGE;\n  const hasPrev = current > 1;\n\n  return (\n    <Wrapper>\n      {hasPrev && (\n        <PaginationLink align=\"left\" to={getPrevUrl()}>\n          ← Newer Posts\n        </PaginationLink>\n      )}\n      {hasNext && (\n        <PaginationLink align=\"right\" to={getNextUrl()}>\n          Older Posts →\n        </PaginationLink>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  &:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n`;\n\nconst PaginationLink = styled(Link)<{ align: string }>`\n  float: ${({ align }) => align};\n  padding: 15px 25px;\n  border: 1px solid #ddd;\n  text-transform: uppercase;\n  text-decoration: none;\n  font-weight: 800;\n  font-size: 14px;\n  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  color: #404040;\n\n  &:hover {\n    color: #fff;\n    background: #0085a1;\n    border: 1px solid #0085a1;\n  }\n`;\n\nexport default Pagination;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport SEO from '../components/seo';\nimport Layout from '../components/layout';\nimport ListHeader from '../components/listHeader';\nimport PostList from '../components/postList';\nimport Pagination from '../components/pagination';\n\ntype Props = {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          id: string;\n          frontmatter: { title: string; date: string; categories: string[] };\n          fields: {\n            slug: string;\n          };\n          excerpt: string;\n        };\n      }>;\n    };\n  };\n  path: string;\n};\n\nconst PostListPage: React.FC<Props> = ({ data, path }) => {\n  const {\n    allMarkdownRemark: { totalCount, edges: posts },\n  } = data;\n\n  const currentPage = parseInt(path.replace('/page', ''), 10) || 0;\n\n  return (\n    <>\n      <SEO article={false} />\n      <Layout>\n        <SEO />\n        <ListHeader />\n        <PostList posts={posts} />\n        <Pagination total={totalCount} current={currentPage} />\n      </Layout>\n    </>\n  );\n};\n\nexport default PostListPage;\n\nexport const postListQuery = graphql`\n  query postListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { layout: { eq: \"post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            categories\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 200)\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}